{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelvi\\\\Desktop\\\\web dev\\\\kelvin's website\\\\react\\\\kelvins-website\\\\src\\\\Components\\\\WorldMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport mapdata from \"./data.csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst country_info = {\n  \"USA\": [\"./CountryImages/USA.jpg\", \"Smallest directly families surprise honoured am an. Speaking replying mistress him numerous she returned feelings may day. Evening way luckily son exposed get general greatly. Zealously prevailed be arranging do. Set arranging too dejection september happiness. Understood instrument or do connection no appearance do invitation. Dried quick round it or order. Add past see west felt did any. Say out noise you taste merry plate you share. My resolve arrived is we chamber be removal. On on produce colonel pointed. Just four sold need over how any. In to september suspicion determine he prevailed admitting. On adapted an as affixed limited on. Giving cousin warmly things no spring mr be abroad. Relation breeding be as repeated strictly followed margaret. One gravity son brought shyness waiting regular led ham.\"],\n  \"Canada\": [\"./CountryImages/Canada.jpg\", \"Smallest directly families\"],\n  \"Ireland\": [\"./CountryImages/Ireland.jpg\", \"Smallest directly families\"],\n  \"Egypt\": [\"./CountryImages/Egypt.jpg\", \"Smallest directly families\"],\n  \"Czech Republic\": [\"./CountryImages/CzechRepublic.jpg\", \"Smallest directly families\"],\n  \"Germany\": [\"./CountryImages/Germany.jpg\", \"Smallest directly families\"],\n  \"France\": [\"./CountryImages/France.jpg\", \"Smallest directly families\"],\n  \"Greece\": [\"./CountryImages/Greece.jpg\", \"Smallest directly families\"],\n  \"Iceland\": [\"./CountryImages/Iceland.jpg\", \"A friend and I took a road trip around the ring of Iceland and stopped along the way to see many of the natural landmarks and attractions. The landscape was alien, barren, and constantly changing. It is about 1/100 the size of Canada and has a population around the same ratio. The cost of living is quite high. We made the mistake of assuming the cereal and coffee was complementary, when it was 19 dollars for corn flakes. However, some things were exceptionally affordable, like the dairy industry. We bought a large block of quality cheese which lasted us the entire trip.\", \"This is a picture of Akureyri, the second largest city in Iceland and marked the halfway point of the trip. The lights of the city reflecting off the water had a magical quality to it which reminded me of my favourite Christmas movie, The Polar Express, when the train pulls into Santaâ€™s village. \"],\n  \"Italy\": [\"./CountryImages/Italy.jpg\", \"Smallest directly families\"],\n  \"Japan\": [\"./CountryImages/Japan.jpg\", \"Smallest directly families\"],\n  \"Mexico\": [\"./CountryImages/Mexico.jpg\", \"Smallest directly families\"],\n  \"Norway\": [\"./CountryImages/Norway.jpg\", \"Smallest directly families\"],\n  \"Poland\": [\"./CountryImages/Poland.jpg\", \"Smallest directly families\"],\n  \"Thailand\": [\"./CountryImages/Thailand.jpg\", \"Smallest directly families\"]\n};\nfunction ForLoopParagraphs(props) {\n  console.log(props);\n}\n_c = ForLoopParagraphs;\nfunction RecieveCountry(props) {\n  let visitedCountries = [\"USA\", \"Canada\", \"Ireland\", \"Egypt\", \"Czech Republic\", \"Germany\", \"France\", \"Greece\", \"Iceland\", \"Italy\", \"Japan\", \"Mexico\", \"Norway\", \"Poland\", \"Thailand\"];\n  let contains = visitedCountries.includes(props.name);\n  if (contains) {\n    let info = country_info[props.name];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: info[0],\n        className: \"photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ForLoopParagraphs, {\n        props: info.slice(1, info.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c2 = RecieveCountry;\nconst WorldMap = () => {\n  _s();\n  const ref = useRef();\n  const [Country, setCountry] = useState(\"\");\n  useEffect(() => {\n    // set the dimensions and margins of the graph\n    const width = 900;\n    const height = 900;\n    const svg = d3.select(ref.current).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n\n    // Map and projection\n    const projection = d3.geoMercator().center([0, 20]).translate([width / 2, height / 2]);\n\n    // Data and color scale\n    const data = new Map();\n    const colorScale = d3.scaleLinear().domain([0, 1]).range([\"grey\", \"blue\"]);\n\n    // Load external data and boot\n    Promise.all([d3.json(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\"), d3.csv(mapdata, function (d) {\n      data.set(d.code, +d.visited);\n    })]).then(function (loadData) {\n      let topo = loadData[0];\n      let mouseOver = function (d) {\n        d3.selectAll(\".Country\").transition().duration(200).style(\"opacity\", .5);\n        d3.select(this).transition().duration(200).style(\"opacity\", 1).style(\"stroke\", \"black\");\n      };\n      let mouseLeave = function (d) {\n        d3.selectAll(\".Country\").transition().duration(200).style(\"opacity\", .8);\n        d3.select(this).transition().duration(200).style(\"stroke\", \"transparent\");\n      };\n      let mouseClick = function (event, d) {\n        d3.selectAll(\".Country\").transition().duration(200).style(\"opacity\", 0.8);\n        d3.select(this).transition().duration(200).style(\"stroke\", \"transparent\");\n        setCountry(d.properties.name);\n      };\n\n      // Draw the map\n      svg.append(\"g\").selectAll(\"path\").data(topo.features).enter().append(\"path\")\n      // draw each country\n      .attr(\"d\", d3.geoPath().projection(projection))\n      // set the color of each country\n      .attr(\"fill\", function (d) {\n        d.total = data.get(d.id) || 0;\n        return colorScale(d.total);\n      }).style(\"stroke\", \"transparent\").attr(\"class\", function (d) {\n        return \"Country\";\n      }).style(\"opacity\", .8).on(\"mouseover\", mouseOver).on(\"mouseleave\", mouseLeave).on(\"click\", mouseClick); // Attach the mouseClick function\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"worldTravel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"map\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 900 900\",\n        id: \"WorldMap\",\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RecieveCountry, {\n        name: Country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 11\n  }, this);\n};\n_s(WorldMap, \"2C03ljhwYysJVjdAQVcYfLNuP+s=\");\n_c3 = WorldMap;\nexport default WorldMap;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ForLoopParagraphs\");\n$RefreshReg$(_c2, \"RecieveCountry\");\n$RefreshReg$(_c3, \"WorldMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","mapdata","jsxDEV","_jsxDEV","country_info","ForLoopParagraphs","props","console","log","_c","RecieveCountry","visitedCountries","contains","includes","name","info","style","textAlign","children","src","className","fileName","_jsxFileName","lineNumber","columnNumber","slice","length","_c2","WorldMap","_s","ref","Country","setCountry","width","height","svg","select","current","append","attr","projection","geoMercator","center","translate","data","Map","colorScale","scaleLinear","domain","range","Promise","all","json","csv","d","set","code","visited","then","loadData","topo","mouseOver","selectAll","transition","duration","mouseLeave","mouseClick","event","properties","features","enter","geoPath","total","get","id","on","class","viewBox","_c3","$RefreshReg$"],"sources":["C:/Users/kelvi/Desktop/web dev/kelvin's website/react/kelvins-website/src/Components/WorldMap.jsx"],"sourcesContent":["import React, { useEffect, useRef,useState} from \"react\"; \r\nimport * as d3 from \"d3\";\r\nimport mapdata from \"./data.csv\";\r\n\r\nconst country_info = {\r\n  \"USA\" : [\"./CountryImages/USA.jpg\",\"Smallest directly families surprise honoured am an. Speaking replying mistress him numerous she returned feelings may day. Evening way luckily son exposed get general greatly. Zealously prevailed be arranging do. Set arranging too dejection september happiness. Understood instrument or do connection no appearance do invitation. Dried quick round it or order. Add past see west felt did any. Say out noise you taste merry plate you share. My resolve arrived is we chamber be removal. On on produce colonel pointed. Just four sold need over how any. In to september suspicion determine he prevailed admitting. On adapted an as affixed limited on. Giving cousin warmly things no spring mr be abroad. Relation breeding be as repeated strictly followed margaret. One gravity son brought shyness waiting regular led ham.\"],\r\n  \"Canada\" : [\"./CountryImages/Canada.jpg\",\"Smallest directly families\"],\r\n  \"Ireland\" : [\"./CountryImages/Ireland.jpg\",\"Smallest directly families\"],\r\n  \"Egypt\" : [\"./CountryImages/Egypt.jpg\",\"Smallest directly families\"],\r\n  \"Czech Republic\" : [\"./CountryImages/CzechRepublic.jpg\",\"Smallest directly families\"],\r\n  \"Germany\" : [\"./CountryImages/Germany.jpg\",\"Smallest directly families\"],\r\n  \"France\" : [\"./CountryImages/France.jpg\",\"Smallest directly families\"],\r\n  \"Greece\" : [\"./CountryImages/Greece.jpg\",\"Smallest directly families\"],\r\n  \"Iceland\" : [\"./CountryImages/Iceland.jpg\",\"A friend and I took a road trip around the ring of Iceland and stopped along the way to see many of the natural landmarks and attractions. The landscape was alien, barren, and constantly changing. It is about 1/100 the size of Canada and has a population around the same ratio. The cost of living is quite high. We made the mistake of assuming the cereal and coffee was complementary, when it was 19 dollars for corn flakes. However, some things were exceptionally affordable, like the dairy industry. We bought a large block of quality cheese which lasted us the entire trip.\",\"This is a picture of Akureyri, the second largest city in Iceland and marked the halfway point of the trip. The lights of the city reflecting off the water had a magical quality to it which reminded me of my favourite Christmas movie, The Polar Express, when the train pulls into Santaâ€™s village. \"],\r\n  \"Italy\" : [\"./CountryImages/Italy.jpg\",\"Smallest directly families\"],\r\n  \"Japan\" : [\"./CountryImages/Japan.jpg\",\"Smallest directly families\"],\r\n  \"Mexico\" : [\"./CountryImages/Mexico.jpg\",\"Smallest directly families\"],\r\n  \"Norway\" : [\"./CountryImages/Norway.jpg\",\"Smallest directly families\"],\r\n  \"Poland\" : [\"./CountryImages/Poland.jpg\",\"Smallest directly families\"],\r\n  \"Thailand\" : [\"./CountryImages/Thailand.jpg\",\"Smallest directly families\"]\r\n};\r\n\r\nfunction ForLoopParagraphs(props){\r\n  console.log(props);\r\n}\r\nfunction RecieveCountry(props) {\r\n    let visitedCountries = [\"USA\",\"Canada\",\"Ireland\",\"Egypt\",\"Czech Republic\",\"Germany\",\"France\",\"Greece\",\"Iceland\",\"Italy\",\"Japan\",\"Mexico\",\"Norway\",\"Poland\",\"Thailand\"];\r\n    let contains = visitedCountries.includes(props.name);\r\n    if(contains){\r\n      let info = country_info[props.name];\r\n        return(\r\n            <div style={{textAlign: \"center\"}} >\r\n              <img src = {info[0]} className = \"photo\"/>\r\n              <ForLoopParagraphs props = {info.slice(1,info.length)}/>\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst WorldMap = () => {\r\n  const ref = useRef();\r\n  const [Country, setCountry] = useState(\"\");\r\n  useEffect(() => {\r\n    // set the dimensions and margins of the graph\r\n    const width = 900;\r\n    const height = 900;\r\n    \r\n    const svg = d3\r\n      .select(ref.current)\r\n      .append(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\",height)\r\n\r\n    // Map and projection\r\n    const projection = d3.geoMercator()\r\n\r\n    .center([0,20])\r\n    .translate([width / 2, height / 2]);\r\n  \r\n  // Data and color scale\r\n  const data = new Map();\r\n  const colorScale = d3.scaleLinear()\r\n  .domain([0,1])\r\n  .range([\"grey\",\"blue\"]);\r\n  \r\n  // Load external data and boot\r\n  Promise.all([\r\n  d3.json(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\"),\r\n  d3.csv(mapdata, function(d) {\r\n      data.set(d.code, +d.visited)\r\n  })]).then(function(loadData){\r\n      let topo = loadData[0]\r\n  \r\n      let mouseOver = function(d) {\r\n      d3.selectAll(\".Country\")\r\n        .transition()\r\n        .duration(200)\r\n        .style(\"opacity\", .5)\r\n      d3.select(this)\r\n        .transition()\r\n        .duration(200)\r\n        .style(\"opacity\", 1)\r\n        .style(\"stroke\", \"black\")\r\n    }\r\n  \r\n    let mouseLeave = function(d) {\r\n      d3.selectAll(\".Country\")\r\n        .transition()\r\n        .duration(200)\r\n        .style(\"opacity\", .8)\r\n      d3.select(this)\r\n        .transition()\r\n        .duration(200)\r\n        .style(\"stroke\", \"transparent\")\r\n    }\r\n\r\n    let mouseClick = function (event, d) {\r\n            d3.selectAll(\".Country\")\r\n              .transition()\r\n              .duration(200)\r\n              .style(\"opacity\", 0.8);\r\n            d3.select(this)\r\n              .transition()\r\n              .duration(200)\r\n              .style(\"stroke\", \"transparent\");\r\n              setCountry(d.properties.name);\r\n          };\r\n    \r\n    // Draw the map\r\n    svg.append(\"g\")\r\n      .selectAll(\"path\")\r\n      .data(topo.features)\r\n      .enter()\r\n      .append(\"path\")\r\n        // draw each country\r\n        .attr(\"d\", d3.geoPath()\r\n          .projection(projection)\r\n        )\r\n        // set the color of each country\r\n        .attr(\"fill\", function (d) {\r\n          d.total = data.get(d.id) || 0;\r\n          return colorScale(d.total);\r\n        })\r\n        .style(\"stroke\", \"transparent\")\r\n        .attr(\"class\", function(d){ return \"Country\" } )\r\n        .style(\"opacity\", .8)\r\n        .on(\"mouseover\", mouseOver )\r\n        .on(\"mouseleave\", mouseLeave )\r\n        .on(\"click\", mouseClick); // Attach the mouseClick function\r\n  \r\n  });\r\n  }, []);\r\n  \r\n  return (<div className=\"worldTravel\">\r\n  <div class=\"map\">\r\n    <svg viewBox=\"0 0 900 900\" id=\"WorldMap\" ref={ref} />\r\n    </div>\r\n  <div>\r\n    <RecieveCountry name={Country} />\r\n  </div>\r\n</div>);\r\n};\r\n\r\nexport default WorldMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}