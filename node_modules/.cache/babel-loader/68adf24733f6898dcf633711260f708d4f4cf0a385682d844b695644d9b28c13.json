{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelvi\\\\Desktop\\\\web dev\\\\kelvin's website\\\\react\\\\kelvins-website\\\\src\\\\Components\\\\WorldMap.jsx\",\n  _s2 = $RefreshSig$();\nimport * as d3 from \"d3\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport mapdata from \"./data.csv\";\nimport recieveCountry from \"./VisitedCountries\";\nimport Wahoo from \"./Test.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const ref = useRef();\n  _s(useEffect(_s(() => {\n    _s();\n    // set the dimensions and margins of the graph\n    const [countryrender, setCountry] = useState(\"\");\n    const width = 900;\n    const height = 900;\n    const svg = d3.select(ref.current).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n\n    // Map and projection\n    const path = d3.geoPath();\n    const projection = d3.geoMercator().center([0, 20]).translate([width / 2, height / 2]);\n\n    // Data and color scale\n    const data = new Map();\n    const colorScale = d3.scaleLinear().domain([0, 1]).range([\"grey\", \"blue\"]);\n\n    // Load external data and boot\n    Promise.all([d3.json(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\"), d3.csv(mapdata, function (d) {\n      data.set(d.code, +d.visited);\n    })]).then(function (loadData) {\n      let topo = loadData[0];\n      let mouseOver = function (d) {\n        d3.selectAll(\".Country\").transition().duration(200).style(\"opacity\", .5);\n        d3.select(this).transition().duration(200).style(\"opacity\", 1).style(\"stroke\", \"black\");\n      };\n      let mouseLeave = function (d) {\n        d3.selectAll(\".Country\").transition().duration(200).style(\"opacity\", .8);\n        d3.select(this).transition().duration(200).style(\"stroke\", \"transparent\");\n      };\n      let mouseClick = function (event, d) {\n        d3.selectAll(\".Country\").transition().duration(200).style(\"opacity\", 0.8);\n        d3.select(this).transition().duration(200).style(\"stroke\", \"transparent\");\n        countryrender = d.properties.name;\n        console.log(countryrender);\n        console.log(d.properties.name);\n      };\n\n      // Draw the map\n      svg.append(\"g\").selectAll(\"path\").data(topo.features).enter().append(\"path\")\n      // draw each country\n      .attr(\"d\", d3.geoPath().projection(projection))\n      // set the color of each country\n      .attr(\"fill\", function (d) {\n        d.total = data.get(d.id) || 0;\n        return colorScale(d.total);\n      }).style(\"stroke\", \"transparent\").attr(\"class\", function (d) {\n        return \"Country\";\n      }).style(\"opacity\", .8).on(\"mouseover\", mouseOver).on(\"mouseleave\", mouseLeave).on(\"click\", mouseClick); // Attach the mouseClick function\n    });\n  }, \"nBuWOFwhT+P0EArOsMbDmfXSczQ=\"), [countryrender]), \"nBuWOFwhT+P0EArOsMbDmfXSczQ=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: 900,\n      height: 900,\n      id: \"WorldMap\",\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Wahoo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n};\n_s2(WorldMap, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["d3","React","useEffect","useRef","useState","mapdata","recieveCountry","Wahoo","jsxDEV","_jsxDEV","WorldMap","_s2","_s","$RefreshSig$","ref","countryrender","setCountry","width","height","svg","select","current","append","attr","path","geoPath","projection","geoMercator","center","translate","data","Map","colorScale","scaleLinear","domain","range","Promise","all","json","csv","d","set","code","visited","then","loadData","topo","mouseOver","selectAll","transition","duration","style","mouseLeave","mouseClick","event","properties","name","console","log","features","enter","total","get","id","on","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kelvi/Desktop/web dev/kelvin's website/react/kelvins-website/src/Components/WorldMap.jsx"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport React, { useEffect, useRef,useState} from \"react\"; \r\nimport mapdata from \"./data.csv\";\r\nimport recieveCountry from \"./VisitedCountries\";\r\nimport Wahoo from \"./Test.jsx\";\r\nconst WorldMap = () => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    // set the dimensions and margins of the graph\r\n    const [countryrender,setCountry] = useState(\"\");\r\n    const width = 900;\r\n    const height = 900;\r\n\r\n    const svg = d3\r\n      .select(ref.current)\r\n      .append(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\",height)\r\n\r\n    // Map and projection\r\n    const path = d3.geoPath();\r\n    const projection = d3.geoMercator()\r\n\r\n    .center([0,20])\r\n    .translate([width / 2, height / 2]);\r\n  \r\n  // Data and color scale\r\n  const data = new Map();\r\n  const colorScale = d3.scaleLinear()\r\n  .domain([0,1])\r\n  .range([\"grey\",\"blue\"]);\r\n  \r\n  // Load external data and boot\r\n  Promise.all([\r\n  d3.json(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\"),\r\n  d3.csv(mapdata, function(d) {\r\n      data.set(d.code, +d.visited)\r\n  })]).then(function(loadData){\r\n      let topo = loadData[0]\r\n  \r\n      let mouseOver = function(d) {\r\n      d3.selectAll(\".Country\")\r\n        .transition()\r\n        .duration(200)\r\n        .style(\"opacity\", .5)\r\n      d3.select(this)\r\n        .transition()\r\n        .duration(200)\r\n        .style(\"opacity\", 1)\r\n        .style(\"stroke\", \"black\")\r\n    }\r\n  \r\n    let mouseLeave = function(d) {\r\n      d3.selectAll(\".Country\")\r\n        .transition()\r\n        .duration(200)\r\n        .style(\"opacity\", .8)\r\n      d3.select(this)\r\n        .transition()\r\n        .duration(200)\r\n        .style(\"stroke\", \"transparent\")\r\n    }\r\n\r\n    let mouseClick = function (event, d) {\r\n            d3.selectAll(\".Country\")\r\n              .transition()\r\n              .duration(200)\r\n              .style(\"opacity\", 0.8);\r\n            d3.select(this)\r\n              .transition()\r\n              .duration(200)\r\n              .style(\"stroke\", \"transparent\");\r\n              countryrender = d.properties.name;\r\n              console.log(countryrender);\r\n              console.log(d.properties.name);\r\n\r\n          };\r\n    \r\n    // Draw the map\r\n    svg.append(\"g\")\r\n      .selectAll(\"path\")\r\n      .data(topo.features)\r\n      .enter()\r\n      .append(\"path\")\r\n        // draw each country\r\n        .attr(\"d\", d3.geoPath()\r\n          .projection(projection)\r\n        )\r\n        // set the color of each country\r\n        .attr(\"fill\", function (d) {\r\n          d.total = data.get(d.id) || 0;\r\n          return colorScale(d.total);\r\n        })\r\n        .style(\"stroke\", \"transparent\")\r\n        .attr(\"class\", function(d){ return \"Country\" } )\r\n        .style(\"opacity\", .8)\r\n        .on(\"mouseover\", mouseOver )\r\n        .on(\"mouseleave\", mouseLeave )\r\n        .on(\"click\", mouseClick); // Attach the mouseClick function\r\n  \r\n  });\r\n  }, [countryrender]);\r\n\r\n  return <div>\r\n    <svg width={900} height={900} id=\"WorldMap\" ref={ref} />\r\n    <Wahoo />\r\n    </div>;\r\n};\r\n\r\nexport default WorldMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}